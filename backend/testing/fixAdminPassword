import mongoose from 'mongoose';
import bcrypt from 'bcryptjs';
import dotenv from 'dotenv';

// Load environment variables
dotenv.config();

// Import your User model
import User from '../models/User.js';

async function fixAdminPassword() {
  try {
    // Connect to MongoDB
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/qr-food-ordering');
    console.log('Connected to MongoDB');

    // Find the admin user
    const adminUser = await User.findOne({ email: 'admin@example.com' });
    
    if (!adminUser) {
      console.log('Admin user not found');
      return;
    }

    // Generate a proper hash for the password "Admin@123"
    const saltRounds = 10;
    const correctHash = await bcrypt.hash('Admin@123', saltRounds);
    
    // Update the user with the correct hash
    adminUser.password = correctHash;
    await adminUser.save();
    
    console.log('Admin password fixed successfully');
    console.log('New hash:', correctHash);
    console.log('You can now login with:');
    console.log('Email: admin@example.com');
    console.log('Password: Admin@123');
    
    process.exit(0);
  } catch (error) {
    console.error('Error fixing admin password:', error);
    process.exit(1);
  }
}

fixAdminPassword();